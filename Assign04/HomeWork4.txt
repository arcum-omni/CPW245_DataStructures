// Travis Eiler
// CPW 245, Winter '20
// Assignment #4: Linked Lists
// Due: Feb 05, 2020


// BJP4 Exercise 16.13: transferFrom
public void transferFrom(LinkedIntList list) {
    if (front == null) {
        front = list.front;
    }
    else {
        ListNode current = front;
        while (current.next != null) {
            current = current.next;
        }
        current.next = list.front;
    }
    list.front = null;
}


// BJP4 Exercise 16.14: removeAll
public void removeAll(int value) {
    while (front != null && front.data == value) {
        front = front.next;
    }
    ListNode current = front;
    while (current != null && current.next != null) {
        if (current.next.data == value) {
            current.next = current.next.next;
        }
        else {
            current = current.next;
        }
    } 
}


// BJP4 Exercise 16.15: equals
public boolean equals2(LinkedIntList list) {
    ListNode current1 = front;
    ListNode current2 = list.front; 
    if (current1 == null && current2 == null) {
        return true;
    }
    else if (current1 != null && current2 != null) {
        while (current1 != null && current2 != null) {
            if (current1.data != current2.data) {
                return false;
            }
            else {
                current1 = current1.next;
                current2 = current2.next;
            }
        }
        return current1 == null && current2 == null;
    }
    return false;
}