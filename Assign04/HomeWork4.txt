// Travis Eiler
// CPW 245, Winter '20
// Assignment #4: Linked Lists
// Due: Feb 05, 2020


// BJP4 Exercise 16.13: transferFrom
public void transferFrom (LinkedIntList secondList) {
    if (front == null) {
        front = secondList.front;
    }
    else {
        ListNode current = front;
        while (current.next != null) {
            current = current.next;
        }
        current.next = secondList.front;
    }
    secondList.front = null;
}


// BJP4 Exercise 16.14: removeAll
public void removeAll (int num) {
    while (front != null && front.data == num) {
        front = front.next;
    }
    ListNode current = front;
    while (current != null && current.next != null) {
        if (current.next.data == num) {
            current.next = current.next.next;
        }
        else {
            current = current.next;
        }
    } 
}


// BJP4 Exercise 16.15: equals
public boolean equals2 (LinkedIntList secondList) {
    ListNode thisList = front;
    ListNode incomingList = secondList.front;
    while (thisList != null || incomingList != null) {
        if (thisList == null || incomingList == null) {
            return false;
        }
        if (thisList.data != incomingList.data) {
            return false;
        }
        thisList = thisList.next;
        incomingList = incomingList.next;
    }
    return true;
}
